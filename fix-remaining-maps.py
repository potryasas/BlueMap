#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è settings.json —Ñ–∞–π–ª—ã –¥–ª—è –∫–∞—Ä—Ç Nether –∏ End
"""

import json
import os

def fix_remaining_maps():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è world_nether –∏ world_the_end"""
    
    print("üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï NETHER –ò END –ö–ê–†–¢")
    print("=" * 50)
    
    maps_dir = r"c:\Personal\TestServer\plugins\BlueMap\web\maps"
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    maps_configs = {
        "world_nether": {
            "name": "world_nether",
            "sorting": 1,
            "startLocation": {
                "x": 0,
                "z": 0
            }
        },
        "world_the_end": {
            "name": "world_the_end",
            "sorting": 2,
            "startLocation": {
                "x": 0,
                "z": 0
            }
        }
    }
    
    for map_id, config in maps_configs.items():
        map_settings_file = os.path.join(maps_dir, map_id, "settings.json")
        
        try:
            # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            if os.path.exists(map_settings_file):
                backup_file = map_settings_file + ".backup"
                with open(map_settings_file, 'r', encoding='utf-8') as f:
                    backup_content = f.read()
                with open(backup_file, 'w', encoding='utf-8') as f:
                    f.write(backup_content)
                print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {map_id}/settings.json.backup")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            with open(map_settings_file, 'w', encoding='utf-8') as f:
                json.dump(config, f, ensure_ascii=False, indent=2)
            
            print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: {map_id}/settings.json")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è {map_id}/settings.json: {e}")

def verify_all_maps():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–∞—Ä—Ç—ã"""
    
    print("\nüîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ö–ê–†–¢")
    print("=" * 40)
    
    maps_dir = r"c:\Personal\TestServer\plugins\BlueMap\web\maps"
    map_dirs = ["world", "world_nether", "world_the_end"]
    
    for map_id in map_dirs:
        settings_file = os.path.join(maps_dir, map_id, "settings.json")
        
        if os.path.exists(settings_file):
            try:
                with open(settings_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                
                print(f"üìç {map_id}:")
                print(f"   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('name', '–ù–ï –£–ö–ê–ó–ê–ù–û')}")
                print(f"   ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {data.get('sorting', '–ù–ï –£–ö–ê–ó–ê–ù–ê')}")
                
                if 'startLocation' in data:
                    start_loc = data['startLocation']
                    print(f"   ‚úÖ –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è: x={start_loc.get('x', '?')}, z={start_loc.get('z', '?')}")
                else:
                    print("   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç startLocation")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {map_id}/settings.json: {e}")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {map_id}/settings.json")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    fix_remaining_maps()
    verify_all_maps()
    
    print("\nüéâ –í–°–ï –ö–ê–†–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!")
    print("\nüéØ –¢–ï–ü–ï–†–¨:")
    print("1. üîÑ –û–±–Ω–æ–≤–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä (Ctrl+F5)")
    print("2. üó∫Ô∏è –û—à–∏–±–∫–∞ [object Object] –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å!")
    print("3. üéØ –ú–∞—Ä–∫–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è!")

if __name__ == "__main__":
    main() 