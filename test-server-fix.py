#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è BlueMap —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
"""

import http.server
import socketserver
import os
import json
import shutil
from pathlib import Path

class BlueMapHandler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=r"c:\Personal\TestServer\plugins\BlueMap\web", **kwargs)
    
    def do_GET(self):
        print(f"üåê REQUEST: {self.path}")
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è live/markers.json
        if self.path.endswith('/live/markers.json'):
            self.send_response(200)
            self.send_header('Content-type', 'application/json; charset=utf-8')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            
            markers_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\markers.json"
            try:
                with open(markers_file, 'r', encoding='utf-8') as f:
                    data = f.read()
                self.wfile.write(data.encode('utf-8'))
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã live markers: {len(data)} —Å–∏–º–≤–æ–ª–æ–≤")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ markers: {e}")
                self.wfile.write(b'{}')
            return
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è live/players.json
        if self.path.endswith('/live/players.json'):
            self.send_response(200)
            self.send_header('Content-type', 'application/json; charset=utf-8')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            
            players_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\players.json"
            try:
                with open(players_file, 'r', encoding='utf-8') as f:
                    data = f.read()
                self.wfile.write(data.encode('utf-8'))
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã live players: {len(data)} —Å–∏–º–≤–æ–ª–æ–≤")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ players: {e}")
                self.wfile.write(b'{"players":[]}')
            return
        
        # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        return super().do_GET()

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ù–ê –°–ï–†–í–ï–†–ï")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    files_to_check = [
        r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\markers.json",
        r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\players.json",
        r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\settings.json"
    ]
    
    for file_path in files_to_check:
        if os.path.exists(file_path):
            size = os.path.getsize(file_path)
            print(f"‚úÖ {os.path.basename(file_path)}: {size:,} –±–∞–π—Ç")
            
            # –î–ª—è JSON —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            if file_path.endswith('.json'):
                try:
                    with open(file_path, 'r', encoding='utf-8') as f:
                        data = json.load(f)
                    
                    if 'markers.json' in file_path:
                        marker_count = sum(len(cat.get('markers', {})) for cat in data.values() if isinstance(cat, dict))
                        print(f"   üìç –ú–∞—Ä–∫–µ—Ä–æ–≤: {marker_count}")
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                        for cat_name in list(data.keys())[:3]:
                            if isinstance(data[cat_name], dict) and 'markers' in data[cat_name]:
                                markers_in_cat = len(data[cat_name]['markers'])
                                print(f"   - {cat_name}: {markers_in_cat} –º–∞—Ä–∫–µ—Ä–æ–≤")
                    
                    elif 'players.json' in file_path:
                        players = data.get('players', [])
                        print(f"   üë• –ò–≥—Ä–æ–∫–æ–≤: {len(players)}")
                    
                    elif 'settings.json' in file_path:
                        print(f"   ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {list(data.keys())}")
                        
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
        else:
            print(f"‚ùå {os.path.basename(file_path)}: –ù–ï –ù–ê–ô–î–ï–ù")

def main():
    print("üöÄ –¢–ï–°–¢–û–í–´–ô BLUEMAP –°–ï–†–í–ï–†")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    check_files()
    
    print(f"\nüåê –ó–ê–ü–£–°–ö HTTP –°–ï–†–í–ï–†–ê...")
    print(f"üìÇ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: c:\\Personal\\TestServer\\plugins\\BlueMap\\web")
    
    PORT = 8100
    
    try:
        with socketserver.TCPServer(("", PORT), BlueMapHandler) as httpd:
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
            print(f"üåê –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:{PORT}")
            print(f"üìç Live markers: http://localhost:{PORT}/maps/world/live/markers.json")
            print(f"üë• Live players: http://localhost:{PORT}/maps/world/live/players.json")
            print(f"‚öôÔ∏è Settings: http://localhost:{PORT}/maps/world/settings.json")
            print()
            print("üéØ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
            print("1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8100")
            print("2. –î–æ–ª–∂–Ω–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∫–∞—Ä—Ç–∞ BlueMap")
            print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ –æ—à–∏–±–∫–∏")
            print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
            print()
            print("‚ùå –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
            print("=" * 50)
            
            httpd.serve_forever()
            
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    main() 