#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞—ë—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è BlueMap
"""

import os
import json
import shutil

def create_world_index():
    """–°–æ–∑–¥–∞—ë—Ç index.html –¥–ª—è –∫–∞—Ä—Ç—ã –º–∏—Ä–∞"""
    
    print("=" * 60)
    print("üìÑ –°–û–ó–î–ê–ù–ò–ï INDEX.HTML –î–õ–Ø –ö–ê–†–¢–´ –ú–ò–†–ê")
    print("=" * 60)
    
    world_index_content = '''<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BlueMap - World</title>
    <script>
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ–π
        window.location.href = '/';
    </script>
</head>
<body>
    <p>Redirecting to main BlueMap interface...</p>
</body>
</html>'''
    
    index_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\index.html"
    
    try:
        with open(index_file, 'w', encoding='utf-8') as f:
            f.write(world_index_content)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {index_file}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è index.html: {e}")
        return False

def create_live_players():
    """–°–æ–∑–¥–∞—ë—Ç —Ñ–∞–π–ª live-players.json"""
    
    print("\nüìä –°–û–ó–î–ê–ù–ò–ï LIVE-PLAYERS.JSON")
    
    live_players_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live-players.json"
    
    live_players_data = {}
    
    try:
        with open(live_players_file, 'w', encoding='utf-8') as f:
            json.dump(live_players_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: live-players.json")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è live-players.json: {e}")
        return False

def fix_main_index():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—ã–π index.html"""
    
    print("\nüåê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ì–õ–ê–í–ù–û–ì–û INDEX.HTML")
    
    main_index = r"c:\Personal\TestServer\plugins\BlueMap\web\index.html"
    source_index = "bluemap-test/web/index.html"
    
    if os.path.exists(source_index):
        try:
            # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            if os.path.exists(main_index):
                backup_file = main_index + ".backup"
                shutil.copy2(main_index, backup_file)
                print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: index.html.backup")
            
            # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
            shutil.copy2(source_index, main_index)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω –≥–ª–∞–≤–Ω—ã–π index.html")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è index.html: {e}")
            return False
    else:
        print(f"‚ö†Ô∏è –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_index}")
        return False

def check_web_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–µ–±-—Ñ–∞–π–ª–æ–≤"""
    
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –í–ï–ë-–§–ê–ô–õ–û–í")
    
    web_root = r"c:\Personal\TestServer\plugins\BlueMap\web"
    
    required_files = [
        "index.html",
        "settings.json",
        "maps/world/markers.json",
        "maps/world/settings.json",
        "maps/world/world.json",
        "maps/world/index.html",
        "assets/index-BIEfirVm.js"
    ]
    
    missing_files = []
    
    for file_path in required_files:
        full_path = os.path.join(web_root, file_path)
        if os.path.exists(full_path):
            size = os.path.getsize(full_path)
            print(f"‚úÖ {file_path} ({size:,} –±–∞–π—Ç)")
        else:
            print(f"‚ùå {file_path} –û–¢–°–£–¢–°–¢–í–£–ï–¢")
            missing_files.append(file_path)
    
    return missing_files

def create_settings_json():
    """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π settings.json"""
    
    print("\n‚öôÔ∏è –°–û–ó–î–ê–ù–ò–ï SETTINGS.JSON")
    
    settings_data = {
        "version": 1,
        "maps": {
            "world": {
                "enabled": True,
                "name": "World",
                "world": "world",
                "sorting": 0
            }
        },
        "scripts": [],
        "styles": []
    }
    
    settings_file = r"c:\Personal\TestServer\plugins\BlueMap\web\settings.json"
    
    try:
        with open(settings_file, 'w', encoding='utf-8') as f:
            json.dump(settings_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω settings.json")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è settings.json: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîß –°–û–ó–î–ê–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –§–ê–ô–õ–û–í BlueMap")
    print("=" * 60)
    
    success_count = 0
    
    # –°–æ–∑–¥–∞—ë–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã
    if create_world_index():
        success_count += 1
    
    if create_live_players():
        success_count += 1
    
    if fix_main_index():
        success_count += 1
    
    if create_settings_json():
        success_count += 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    missing_files = check_web_structure()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("=" * 60)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ/–æ–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {success_count}")
    
    if missing_files:
        print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã: {len(missing_files)}")
        for file in missing_files:
            print(f"   - {file}")
    else:
        print("üéâ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!")
    
    print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ http://localhost:8100")
    print("2. üßπ –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+F5)")
    print("3. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ –æ—à–∏–±–∫–∏")
    print("4. üì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ-—Ä–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞")

if __name__ == "__main__":
    main() 