#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –º–∞—Ä–∫–µ—Ä–æ–≤ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ ID
"""

from marker_commands import add_marker, find_marker, load_markers
import json

def test_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –º–∞—Ä–∫–µ—Ä–æ–≤"""
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê")
    print("=" * 50)
    
    test_searches = [
        "–õ–∞–π–¥–ª–∏",
        "–≥–æ—Ä–æ–¥", 
        "marker_1",
        "–¥–µ—Ä–µ–≤–Ω—è",
        "–ò–µ—Ä—É—Å–∞–ª–∏–º"
    ]
    
    for search_term in test_searches:
        print(f"\nüîé –ü–æ–∏—Å–∫: '{search_term}'")
        results = find_marker(search_term)
        
        if results:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for result in results[:3]:  # –ü–µ—Ä–≤—ã–µ 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                pos = result['position']
                print(f"   {result['id']}: {result['name']} –≤ {result['category']} ({pos.get('x', 0)}, {pos.get('z', 0)})")
        else:
            print("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

def test_add_marker():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞"""
    
    print("\n‚ûï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ú–ê–†–ö–ï–†–ê")
    print("=" * 50)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä–∫–µ—Ä
    marker_id = add_marker('category_1', '–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥', 1000, 70, 2000)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–∏–ª—Å—è
    results = find_marker(marker_id)
    if results:
        print(f"‚úÖ –ú–∞—Ä–∫–µ—Ä {marker_id} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –Ω–∞–π–¥–µ–Ω")
    else:
        print(f"‚ùå –ú–∞—Ä–∫–µ—Ä {marker_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")

def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–∞—Ä–∫–µ—Ä–æ–≤"""
    
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–†–ö–ï–†–û–í")
    print("=" * 50)
    
    markers, meta = load_markers()
    
    print(f"üìç –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(markers)}")
    print(f"üî¢ –°–ª–µ–¥—É—é—â–∏–π ID –º–∞—Ä–∫–µ—Ä–∞: marker_{meta.get('next_marker_id', 1)}")
    
    total_markers = 0
    for cat_id, cat_data in markers.items():
        if 'markers' in cat_data:
            marker_count = len(cat_data['markers'])
            total_markers += marker_count
            print(f"   {cat_id} ({cat_data.get('label', cat_id)}): {marker_count} –º–∞—Ä–∫–µ—Ä–æ–≤")
    
    print(f"üìç –í—Å–µ–≥–æ –º–∞—Ä–∫–µ—Ä–æ–≤: {total_markers}")

def interactive_commands():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å –∫–æ–º–∞–Ω–¥"""
    
    print("\nüéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –ö–û–ú–ê–ù–î–´")
    print("=" * 50)
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  add <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> <–Ω–∞–∑–≤–∞–Ω–∏–µ> <x> <y> <z> - –¥–æ–±–∞–≤–∏—Ç—å –º–∞—Ä–∫–µ—Ä")
    print("  find <–ø–æ–∏—Å–∫> - –Ω–∞–π—Ç–∏ –º–∞—Ä–∫–µ—Ä")
    print("  stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("  quit - –≤—ã–π—Ç–∏")
    print()
    
    while True:
        try:
            command = input("marker> ").strip()
            
            if command.lower() in ['quit', 'exit', 'q']:
                break
            
            if command.lower() == 'stats':
                show_statistics()
                continue
            
            if command.startswith('find '):
                search_term = command[5:].strip()
                results = find_marker(search_term)
                
                if results:
                    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                    for i, result in enumerate(results[:10], 1):  # –ü–µ—Ä–≤—ã–µ 10
                        pos = result['position']
                        print(f"  {i}. {result['id']}: {result['name']} –≤ {result['category']} ({pos.get('x', 0)}, {pos.get('z', 0)})")
                else:
                    print("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                continue
            
            if command.startswith('add '):
                parts = command[4:].split()
                if len(parts) >= 5:
                    category = parts[0]
                    name = ' '.join(parts[1:-3])  # –í—Å–µ –º–µ–∂–¥—É –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
                    try:
                        x, y, z = float(parts[-3]), float(parts[-2]), float(parts[-1])
                        marker_id = add_marker(category, name, x, y, z)
                        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä–∫–µ—Ä {marker_id}: {name}")
                    except ValueError:
                        print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
                else:
                    print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: add <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> <–Ω–∞–∑–≤–∞–Ω–∏–µ> <x> <y> <z>")
                continue
            
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
            
        except KeyboardInterrupt:
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏")

def main():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ê–ù–î –ú–ê–†–ö–ï–†–û–í")
    print("=" * 50)
    
    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_statistics()
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    test_search()
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
    test_add_marker()
    
    # 4. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("‚úÖ –ü–æ–∏—Å–∫ –ø–æ —Ä—É—Å—Å–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è–º —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ü–æ–∏—Å–∫ –ø–æ —á–∏—Å–ª–æ–≤—ã–º ID —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ß–∏—Å–ª–æ–≤—ã–µ ID –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    
    print("\nüí° –ó–ê–ü–£–°–¢–ò–¢–ï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–£–Æ –ö–û–ù–°–û–õ–¨? (y/n)")
    answer = input().strip().lower()
    
    if answer in ['y', 'yes', '–¥–∞', '–¥']:
        interactive_commands()
    
    print("\nüåê –ü–†–û–í–ï–†–¨–¢–ï –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8100")
    print("2. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+F5)")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ä–æ–≤")

if __name__ == "__main__":
    main() 