#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
"""

import os
import shutil
import json

def fix_markers_file():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –º–∞—Ä–∫–µ—Ä–æ–≤"""
    
    print("=" * 60)
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–ê–ô–õ–ê –ú–ê–†–ö–ï–†–û–í")
    print("=" * 60)
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    source_file = "bluemap-test/web/maps/world/markers.json"
    target_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\markers.json"
    backup_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\markers_backup.json"
    
    print(f"üìÅ –ò—Å—Ç–æ—á–Ω–∏–∫: {source_file}")
    print(f"üìÅ –¶–µ–ª—å: {target_file}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(source_file):
        print(f"‚ùå –§–∞–π–ª-–∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_file}")
        return False
    
    if not os.path.exists(target_file):
        print(f"‚ùå –¶–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {target_file}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
    source_size = os.path.getsize(source_file)
    target_size = os.path.getsize(target_file)
    
    print(f"üìä –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {source_size:,} –±–∞–π—Ç")
    print(f"üìä –†–∞–∑–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞: {target_size:,} –±–∞–π—Ç")
    
    if source_size <= target_size:
        print("‚ö†Ô∏è –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ!")
        return False
    
    try:
        # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        print("üíæ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...")
        shutil.copy2(target_file, backup_file)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        print("üìã –ö–æ–ø–∏—Ä—É—é –Ω–æ–≤—ã–π —Ñ–∞–π–ª –º–∞—Ä–∫–µ—Ä–æ–≤...")
        shutil.copy2(source_file, target_file)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        new_size = os.path.getsize(target_file)
        print(f"‚úÖ –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {new_size:,} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON
        with open(target_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        total_markers = 0
        for category_name, category_data in data.items():
            if 'markers' in category_data:
                marker_count = len(category_data['markers'])
                total_markers += marker_count
                print(f"üìç {category_name}: {marker_count} –º–∞—Ä–∫–µ—Ä–æ–≤")
        
        print(f"üéâ –í—Å–µ–≥–æ –º–∞—Ä–∫–µ—Ä–æ–≤: {total_markers}")
        
        if total_markers > 100:
            print("‚úÖ –§–ê–ô–õ –ú–ê–†–ö–ï–†–û–í –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–Å–ù!")
            print("üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï –°–ï–†–í–ï–† –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            return True
        else:
            print("‚ö†Ô∏è –ú–∞—Ä–∫–µ—Ä–æ–≤ –º–∞–ª–æ, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞–π–ª–æ–º")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        if os.path.exists(backup_file):
            print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...")
            shutil.copy2(backup_file, target_file)
        
        return False

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("\n" + "=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ï–†–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    log_file = r"c:\Personal\TestServer\server.log"
    
    if os.path.exists(log_file):
        print("üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞...")
        
        try:
            with open(log_file, 'r', encoding='utf-8', errors='ignore') as f:
                lines = f.readlines()
                
            # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫
            recent_lines = lines[-20:]
            
            bluemap_found = False
            web_server_found = False
            
            for line in recent_lines:
                if 'BlueMap' in line:
                    bluemap_found = True
                    print(f"üîµ BlueMap: {line.strip()}")
                
                if 'Web server' in line or 'webapp' in line:
                    web_server_found = True
                    print(f"üåê Web: {line.strip()}")
            
            if bluemap_found:
                print("‚úÖ BlueMap –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –ª–æ–≥–∞—Ö")
            else:
                print("‚ùå BlueMap –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–∞—Ö")
            
            if web_server_found:
                print("‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
            else:
                print("‚ùå –í–µ–±-—Å–µ—Ä–≤–µ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–≥–∞—Ö")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
    else:
        print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    success = fix_markers_file()
    
    if success:
        check_server_status()
        
        print("\n" + "=" * 60)
        print("üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("=" * 60)
        print("1. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)")
        print("2. üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: java -jar spigot.jar nogui")
        print("3. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ BlueMap")
        print("4. üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8100")
        print("5. üó∫Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –≤–∞—à–∏ 118 –º–∞—Ä–∫–µ—Ä–æ–≤!")
        print("=" * 60)
    else:
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º.")

if __name__ == "__main__":
    main() 