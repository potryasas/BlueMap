#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä–∫–µ—Ä–æ–≤ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
"""

import os
import json
import requests
import time

def check_server_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ù–ê –°–ï–†–í–ï–†–ï")
    print("=" * 50)
    
    markers_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\markers.json"
    
    if os.path.exists(markers_file):
        size = os.path.getsize(markers_file)
        print(f"‚úÖ live/markers.json –Ω–∞–π–¥–µ–Ω: {size:,} –±–∞–π—Ç")
        
        try:
            with open(markers_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            print(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–π –º–∞—Ä–∫–µ—Ä–æ–≤: {len(data)}")
            
            total_markers = 0
            for cat_name, cat_data in data.items():
                if isinstance(cat_data, dict) and 'markers' in cat_data:
                    marker_count = len(cat_data['markers'])
                    total_markers += marker_count
                    print(f"  üìç {cat_name}: {marker_count} –º–∞—Ä–∫–µ—Ä–æ–≤")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –º–∞—Ä–∫–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
                    if marker_count > 0:
                        first_marker = list(cat_data['markers'].values())[0]
                        if isinstance(first_marker, dict):
                            print(f"    –ü—Ä–∏–º–µ—Ä: {first_marker.get('label', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} –≤ ({first_marker.get('position', {}).get('x', 0)}, {first_marker.get('position', {}).get('z', 0)})")
            
            print(f"üìç –í—Å–µ–≥–æ –º–∞—Ä–∫–µ—Ä–æ–≤: {total_markers}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
            return False
    else:
        print("‚ùå –§–∞–π–ª live/markers.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def check_web_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("\nüåê –ü–†–û–í–ï–†–ö–ê –í–ï–ë-–°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    urls = [
        "http://localhost:8100/maps/world/live/markers.json",
        "http://localhost:8100/maps/world/live/players.json",
        "http://localhost:8100/maps/world/settings.json"
    ]
    
    for url in urls:
        try:
            print(f"üîó –ü—Ä–æ–≤–µ—Ä—è—é: {url}")
            response = requests.get(url, timeout=5)
            
            if response.status_code == 200:
                print(f"‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
                
                if 'markers.json' in url:
                    try:
                        markers_data = response.json()
                        marker_count = sum(len(cat.get('markers', {})) for cat in markers_data.values() if isinstance(cat, dict))
                        print(f"üìç –ú–∞—Ä–∫–µ—Ä–æ–≤ –≤ –≤–µ–±-–æ—Ç–≤–µ—Ç–µ: {marker_count}")
                    except:
                        print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON")
                        
                elif 'players.json' in url:
                    try:
                        players_data = response.json()
                        player_count = len(players_data.get('players', []))
                        print(f"üë• –ò–≥—Ä–æ–∫–æ–≤ –≤ –≤–µ–±-–æ—Ç–≤–µ—Ç–µ: {player_count}")
                    except:
                        print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON")
                        
                elif 'settings.json' in url:
                    try:
                        settings_data = response.json()
                        print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {list(settings_data.keys())}")
                    except:
                        print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON")
            else:
                print(f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
                
        except requests.exceptions.ConnectionError:
            print(f"‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ - —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        except requests.exceptions.Timeout:
            print(f"‚ùå –¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        time.sleep(0.5)

def test_main_page():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
    
    print("\nüè† –ü–†–û–í–ï–†–ö–ê –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´")
    print("=" * 50)
    
    try:
        response = requests.get("http://localhost:8100", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ HTML
            content = response.text.lower()
            
            checks = [
                ("bluemap", "BlueMap —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è"),
                ("canvas", "Canvas —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω"),
                ("javascript", "JavaScript –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"),
                ("maps/world", "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É –º–∏—Ä–∞")
            ]
            
            for check, description in checks:
                if check in content:
                    print(f"‚úÖ {description}")
                else:
                    print(f"‚ö†Ô∏è {description} - –ù–ï –ù–ê–ô–î–ï–ù–û")
                    
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.status_code})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")

def main():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–†–ö–ï–†–û–í –ù–ê –°–ï–†–í–ï–†–ï")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    files_ok = check_server_files()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    check_web_server()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    test_main_page()
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print("=" * 50)
    
    if files_ok:
        print("‚úÖ –§–∞–π–ª—ã –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ")
        print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8100 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ Network")
        print("4. –ò—â–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –∫ /maps/world/live/markers.json")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –∫–∞—Ä—Ç—ã")
        
        print("\nüîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê:")
        print("- –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+F5)")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ JavaScript –≤ –∫–æ–Ω—Å–æ–ª–∏")
        print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—Ä–æ—Å—ã –∫ live –¥–∞–Ω–Ω—ã–º –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–∞–π–ª–∞–º–∏ –º–∞—Ä–∫–µ—Ä–æ–≤")
        print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python live-markers-fix.py")
        print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä")

if __name__ == "__main__":
    main() 