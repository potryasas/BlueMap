#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ BlueMap —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –º–∞—Ä–∫–µ—Ä–æ–≤
"""

import os
import json
import subprocess
import time
from pathlib import Path

def check_bluemap_build():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—Ä–∞–Ω –ª–∏ BlueMap"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–ë–û–†–ö–ò BLUEMAP")
    print("=" * 50)
    
    # –ò—â–µ–º JAR —Ñ–∞–π–ª—ã –ø–ª–∞–≥–∏–Ω–∞
    jar_locations = [
        "bukkit-legacy/build/libs/",
        "implementations/bukkit-legacy/build/libs/",
        "build/libs/"
    ]
    
    found_jars = []
    for location in jar_locations:
        if os.path.exists(location):
            jar_files = [f for f in os.listdir(location) if f.endswith('.jar') and 'BlueMap' in f]
            for jar in jar_files:
                found_jars.append(os.path.join(location, jar))
    
    if found_jars:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã JAR —Ñ–∞–π–ª—ã:")
        for jar in found_jars:
            size = os.path.getsize(jar) / (1024 * 1024)  # MB
            print(f"   {jar} ({size:.1f} MB)")
        return found_jars[0]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
    else:
        print("‚ùå JAR —Ñ–∞–π–ª—ã –ø–ª–∞–≥–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return None

def build_bluemap():
    """–°–æ–±–∏—Ä–∞–µ–º BlueMap –ø–ª–∞–≥–∏–Ω"""
    
    print("\nüî® –°–ë–û–†–ö–ê BLUEMAP –ü–õ–ê–ì–ò–ù–ê")
    print("=" * 50)
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å —Å Gradle
        print("üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º gradle build...")
        
        if os.name == 'nt':  # Windows
            result = subprocess.run(["gradlew.bat", "build"], 
                                   capture_output=True, text=True, cwd=".")
        else:  # Linux/Mac
            result = subprocess.run(["./gradlew", "build"], 
                                   capture_output=True, text=True, cwd=".")
        
        if result.returncode == 0:
            print("‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:")
            print(result.stderr[:500])  # –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –æ—à–∏–±–∫–∏
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False

def copy_plugin_to_server(jar_path):
    """–ö–æ–ø–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
    
    print("\nüìã –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –ü–õ–ê–ì–ò–ù–ê –ù–ê –°–ï–†–í–ï–†")
    print("=" * 50)
    
    server_plugins = r"c:\Personal\TestServer\plugins"
    
    if not os.path.exists(server_plugins):
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {server_plugins}")
        return False
    
    try:
        import shutil
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ BlueMap
        for file in os.listdir(server_plugins):
            if file.startswith("BlueMap") and file.endswith(".jar"):
                old_file = os.path.join(server_plugins, file)
                os.remove(old_file)
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª: {file}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–ª–∞–≥–∏–Ω
        plugin_name = os.path.basename(jar_path)
        target_path = os.path.join(server_plugins, plugin_name)
        
        shutil.copy2(jar_path, target_path)
        
        print(f"‚úÖ –ü–ª–∞–≥–∏–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {plugin_name}")
        print(f"üìç –ü—É—Ç—å: {target_path}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_commands():
    """–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    
    print("\nüéÆ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ö–û–ú–ê–ù–î")
    print("=" * 50)
    
    test_commands = """
# –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è BlueMap —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏

# 1. –°–ø–∏—Å–æ–∫ –º–∞—Ä–∫–µ—Ä–æ–≤
/bluemap markers list

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
/bluemap markers create cities "–ì–æ—Ä–æ–¥–∞"
/bluemap markers create villages "–î–µ—Ä–µ–≤–Ω–∏"
/bluemap markers create landmarks "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"

# 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ ID (addset)
/bluemap markers addset cities 0 70 0 "–°–ø–∞–≤–Ω"
/bluemap markers addset cities 100 65 200 "–ù–æ–≤—ã–π –≥–æ—Ä–æ–¥"
/bluemap markers addset villages -50 70 50 "–î–µ—Ä–µ–≤–Ω—è —É –ª–µ—Å–∞"
/bluemap markers addset landmarks 500 80 -300 "–í–µ–ª–∏–∫–∞—è –±–∞—à–Ω—è"

# 4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ —Å —Ä—É—á–Ω—ã–º–∏ ID (add)
/bluemap markers add cities custom_1 -200 65 -200 "–û—Å–æ–±—ã–π –≥–æ—Ä–æ–¥"

# 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤
/bluemap markers save

# 6. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ä–∫–µ—Ä–æ–≤
/bluemap markers reload

# 7. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤
/bluemap markers examples

# –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
# - –§–∞–π–ª: c:\\Personal\\TestServer\\plugins\\BlueMap\\web\\maps\\world\\live\\markers.json
# - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8100
"""
    
    with open("test_commands.txt", 'w', encoding='utf-8') as f:
        f.write(test_commands)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª test_commands.txt —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏")
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∏–≥—Ä—É –∏–ª–∏ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞")

def check_live_markers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω—ã –ª–∏ live –º–∞—Ä–∫–µ—Ä—ã"""
    
    print("\nüîç –ü–†–û–í–ï–†–ö–ê LIVE –ú–ê–†–ö–ï–†–û–í")
    print("=" * 50)
    
    markers_file = r"c:\Personal\TestServer\plugins\BlueMap\web\maps\world\live\markers.json"
    
    if os.path.exists(markers_file):
        try:
            with open(markers_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            print(f"‚úÖ Live –º–∞—Ä–∫–µ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã: {len(data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            
            total_markers = 0
            for cat_name, cat_data in data.items():
                if isinstance(cat_data, dict) and 'markers' in cat_data:
                    marker_count = len(cat_data['markers'])
                    total_markers += marker_count
                    print(f"   üìÅ {cat_name}: {marker_count} –º–∞—Ä–∫–µ—Ä–æ–≤")
            
            print(f"üìç –í—Å–µ–≥–æ –º–∞—Ä–∫–µ—Ä–æ–≤: {total_markers}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –º–∞—Ä–∫–µ—Ä–æ–≤: {e}")
            return False
    else:
        print("‚ùå –§–∞–π–ª live/markers.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print(f"   –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {markers_file}")
        return False

def create_server_start_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("\nüöÄ –°–û–ó–î–ê–ù–ò–ï –°–ö–†–ò–ü–¢–ê –ó–ê–ü–£–°–ö–ê –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    server_script = '''@echo off
echo –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ Minecraft —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º BlueMap...
cd /d "c:\\Personal\\TestServer"

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Java...
java -version
if %errorlevel% neq 0 (
    echo Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Java 17+
    pause
    exit /b 1
)

echo –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...
java -Xmx2G -Xms1G -jar server.jar nogui

echo –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
pause
'''
    
    with open("start_test_server.bat", 'w', encoding='utf-8') as f:
        f.write(server_script)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç start_test_server.bat")
    print("üéØ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã")

def main():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–õ–ê–ì–ò–ù–ê BLUEMAP")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω
    jar_path = check_bluemap_build()
    
    # 2. –ï—Å–ª–∏ –Ω–µ—Ç - —Å–æ–±–∏—Ä–∞–µ–º
    if not jar_path:
        print("\nüì¶ –ü–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É...")
        if build_bluemap():
            jar_path = check_bluemap_build()
        
        if not jar_path:
            print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –ø–ª–∞–≥–∏–Ω")
            return
    
    # 3. –ö–æ–ø–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if copy_plugin_to_server(jar_path):
        print("‚úÖ –ü–ª–∞–≥–∏–Ω –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞")
        return
    
    # 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    test_commands()
    
    # 5. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    create_server_start_script()
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º live –º–∞—Ä–∫–µ—Ä—ã (–µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å)
    check_live_markers()
    
    print("\n" + "=" * 60)
    print("üéâ –ü–û–î–ì–û–¢–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)
    
    print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: start_test_server.bat")
    print("2. –ó–∞–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞")
    print("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ test_commands.txt")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8100")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª live/markers.json")
    
    print("\nüîç –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨:")
    print("‚úÖ –ö–æ–º–∞–Ω–¥—ã /bluemap markers addset —Å–æ–∑–¥–∞—é—Ç –º–∞—Ä–∫–µ—Ä—ã —Å —á–∏—Å–ª–æ–≤—ã–º–∏ ID")
    print("‚úÖ –ú–∞—Ä–∫–µ—Ä—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ live/markers.json –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–∞—Ä–∫–µ—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
    print("‚úÖ –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –ü–æ–∏—Å–∫ –º–∞—Ä–∫–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ä—É—Å—Å–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è–º")

if __name__ == "__main__":
    main() 