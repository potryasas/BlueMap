#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ BlueMap –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
"""

import os
import shutil
from pathlib import Path

def copy_to_testserver():
    """–ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã BlueMap –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
    
    print("=" * 60)
    print("üöÄ –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –§–ê–ô–õ–û–í –í –¢–ï–°–¢–û–í–´–ô –°–ï–†–í–ï–†")
    print("=" * 60)
    
    # –ü—É—Ç–∏
    source_dir = "bluemap-test/web"
    target_dir = r"c:\Personal\TestServer\plugins\BlueMap\web"
    
    # –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
    target_world = os.path.join(target_dir, "maps", "world")
    target_assets = os.path.join(target_dir, "assets")
    
    os.makedirs(target_world, exist_ok=True)
    os.makedirs(target_assets, exist_ok=True)
    
    print(f"üìÅ –°–æ–∑–¥–∞–ª –ø–∞–ø–∫–∏: {target_world}")
    print(f"üìÅ –°–æ–∑–¥–∞–ª –ø–∞–ø–∫–∏: {target_assets}")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    files_to_copy = [
        # –§–∞–π–ª—ã –º–∞—Ä–∫–µ—Ä–æ–≤
        ("maps/world/markers.json", "maps/world/markers.json", "üìç –ú–∞—Ä–∫–µ—Ä—ã"),
        ("maps/world/live-players.json", "maps/world/live-players.json", "üë• –ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω"),
        ("maps/world/settings.json", "maps/world/settings.json", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—Ç—ã"),
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–µ–±-—Ñ–∞–π–ª—ã
        ("index.html", "index.html", "üåê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("settings.json", "settings.json", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ BlueMap"),
        ("favicon.ico", "favicon.ico", "üé® –ò–∫–æ–Ω–∫–∞ —Å–∞–π—Ç–∞"),
        ("favicon.png", "favicon.png", "üé® –ò–∫–æ–Ω–∫–∞ PNG"),
        
        # JavaScript –∏ CSS
        ("assets/index-BIEfirVm.js", "assets/index-BIEfirVm.js", "üìú JavaScript"),
        ("assets/index-BgiqB2rB.css", "assets/index-BgiqB2rB.css", "üé® CSS —Å—Ç–∏–ª–∏"),
        ("assets/manifest-Ciy5FJKl.webmanifest", "assets/manifest-Ciy5FJKl.webmanifest", "üì± Web –º–∞–Ω–∏—Ñ–µ—Å—Ç"),
    ]
    
    copied_count = 0
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    for source_rel, target_rel, description in files_to_copy:
        source_path = os.path.join(source_dir, source_rel)
        target_path = os.path.join(target_dir, target_rel)
        
        if os.path.exists(source_path):
            try:
                # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                os.makedirs(os.path.dirname(target_path), exist_ok=True)
                
                shutil.copy2(source_path, target_path)
                print(f"‚úÖ {description}: {os.path.basename(source_path)}")
                copied_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è {source_path}: {e}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_path}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤
    print("\nüé® –ö–æ–ø–∏—Ä—É—é –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤...")
    
    icons_source = os.path.join(source_dir, "assets")
    icons_target = target_assets
    
    icon_count = 0
    
    if os.path.exists(icons_source):
        for filename in os.listdir(icons_source):
            if filename.endswith('.png'):
                source_icon = os.path.join(icons_source, filename)
                target_icon = os.path.join(icons_target, filename)
                
                try:
                    shutil.copy2(source_icon, target_icon)
                    icon_count += 1
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏ {filename}: {e}")
    
    print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ {icon_count} –∏–∫–æ–Ω–æ–∫")
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {copied_count}")
    print(f"üé® –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –∏–∫–æ–Ω–æ–∫: {icon_count}")
    print(f"üìÇ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: {target_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:")
    
    check_files = [
        "maps/world/markers.json",
        "maps/world/live-players.json", 
        "index.html",
        "assets/index-BIEfirVm.js"
    ]
    
    for check_file in check_files:
        full_path = os.path.join(target_dir, check_file)
        if os.path.exists(full_path):
            size = os.path.getsize(full_path)
            print(f"‚úÖ {check_file} ({size:,} –±–∞–π—Ç)")
        else:
            print(f"‚ùå {check_file} –ù–ï –ù–ê–ô–î–ï–ù!")
    
    print("\n" + "=" * 60)
    print("üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("=" * 60)
    print("1. üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Bukkit —Å–µ—Ä–≤–µ—Ä (—Å–º. BUKKIT_SERVER_SETUP.md)")
    print("2. üó∫Ô∏è –£ –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 118 –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–µ markers.json")
    print("3. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: java -jar craftbukkit-1.5.2.jar nogui")
    print("4. üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8100")
    print("5. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–≥–∏–Ω–∞")
    print("=" * 60)

if __name__ == "__main__":
    copy_to_testserver() 